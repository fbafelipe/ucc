/*****************************************************************************
 * This file was generated automatically by Parser.
 * Do not edit this file manually.
 * 
 * This file was generated using Parser-1.0.0 compiled in Jun  9 2009 00:43:14
 * 
 * File created in 2009-06-29 22:24:47
 *****************************************************************************/

#ifndef PREPROCESSORPARSERBUFFER_H
#define PREPROCESSORPARSERBUFFER_H

enum PreprocessorParserBuffer_tokens {
	PREPROCESSORPARSERBUFFER_TOKEN_ADD_ASSIGN = 25,
	PREPROCESSORPARSERBUFFER_TOKEN_AND = 55,
	PREPROCESSORPARSERBUFFER_TOKEN_AND_ASSIGN = 30,
	PREPROCESSORPARSERBUFFER_TOKEN_AND_OP = 38,
	PREPROCESSORPARSERBUFFER_TOKEN_BEGIN = 45,
	PREPROCESSORPARSERBUFFER_TOKEN_B_CLOSE = 53,
	PREPROCESSORPARSERBUFFER_TOKEN_B_OPEN = 52,
	PREPROCESSORPARSERBUFFER_TOKEN_COLUMN = 48,
	PREPROCESSORPARSERBUFFER_TOKEN_COMMA = 47,
	PREPROCESSORPARSERBUFFER_TOKEN_COMMENT = 0,
	PREPROCESSORPARSERBUFFER_TOKEN_CONSTANT = 20,
	PREPROCESSORPARSERBUFFER_TOKEN_DEC_OP = 36,
	PREPROCESSORPARSERBUFFER_TOKEN_DEFINE = 3,
	PREPROCESSORPARSERBUFFER_TOKEN_DEFINED = 4,
	PREPROCESSORPARSERBUFFER_TOKEN_DEFINED_M = 5,
	PREPROCESSORPARSERBUFFER_TOKEN_DIRECTIVE_CONTINUE = 1,
	PREPROCESSORPARSERBUFFER_TOKEN_DIRECTIVE_END = 2,
	PREPROCESSORPARSERBUFFER_TOKEN_DIV = 61,
	PREPROCESSORPARSERBUFFER_TOKEN_DIV_ASSIGN = 28,
	PREPROCESSORPARSERBUFFER_TOKEN_DOT = 54,
	PREPROCESSORPARSERBUFFER_TOKEN_ELIF = 12,
	PREPROCESSORPARSERBUFFER_TOKEN_ELLIPSIS = 22,
	PREPROCESSORPARSERBUFFER_TOKEN_ELSE = 11,
	PREPROCESSORPARSERBUFFER_TOKEN_END = 46,
	PREPROCESSORPARSERBUFFER_TOKEN_ENDIF = 13,
	PREPROCESSORPARSERBUFFER_TOKEN_EQ = 49,
	PREPROCESSORPARSERBUFFER_TOKEN_EQ_OP = 42,
	PREPROCESSORPARSERBUFFER_TOKEN_ERROR = 15,
	PREPROCESSORPARSERBUFFER_TOKEN_FILENAME_SYSTEM = 72,
	PREPROCESSORPARSERBUFFER_TOKEN_GE_OP = 41,
	PREPROCESSORPARSERBUFFER_TOKEN_GREATER = 64,
	PREPROCESSORPARSERBUFFER_TOKEN_IDENTIFIER = 18,
	PREPROCESSORPARSERBUFFER_TOKEN_IF = 8,
	PREPROCESSORPARSERBUFFER_TOKEN_IFDEF = 9,
	PREPROCESSORPARSERBUFFER_TOKEN_IFNDEF = 10,
	PREPROCESSORPARSERBUFFER_TOKEN_INCLUDE = 7,
	PREPROCESSORPARSERBUFFER_TOKEN_INC_OP = 35,
	PREPROCESSORPARSERBUFFER_TOKEN_INST_END = 44,
	PREPROCESSORPARSERBUFFER_TOKEN_LEFT_ASSIGN = 24,
	PREPROCESSORPARSERBUFFER_TOKEN_LEFT_OP = 34,
	PREPROCESSORPARSERBUFFER_TOKEN_LESS = 63,
	PREPROCESSORPARSERBUFFER_TOKEN_LESS_SIG = 58,
	PREPROCESSORPARSERBUFFER_TOKEN_LE_OP = 40,
	PREPROCESSORPARSERBUFFER_TOKEN_LINE = 14,
	PREPROCESSORPARSERBUFFER_TOKEN_MACRO = 19,
	PREPROCESSORPARSERBUFFER_TOKEN_MOD = 62,
	PREPROCESSORPARSERBUFFER_TOKEN_MOD_ASSIGN = 29,
	PREPROCESSORPARSERBUFFER_TOKEN_MUL = 60,
	PREPROCESSORPARSERBUFFER_TOKEN_MUL_ASSIGN = 27,
	PREPROCESSORPARSERBUFFER_TOKEN_NEG = 57,
	PREPROCESSORPARSERBUFFER_TOKEN_NE_OP = 43,
	PREPROCESSORPARSERBUFFER_TOKEN_NOT = 56,
	PREPROCESSORPARSERBUFFER_TOKEN_OR = 66,
	PREPROCESSORPARSERBUFFER_TOKEN_OR_ASSIGN = 32,
	PREPROCESSORPARSERBUFFER_TOKEN_OR_OP = 39,
	PREPROCESSORPARSERBUFFER_TOKEN_PLUS_SIG = 59,
	PREPROCESSORPARSERBUFFER_TOKEN_PRAGMA = 17,
	PREPROCESSORPARSERBUFFER_TOKEN_PTR_OP = 37,
	PREPROCESSORPARSERBUFFER_TOKEN_P_CLOSE = 51,
	PREPROCESSORPARSERBUFFER_TOKEN_P_OPEN = 50,
	PREPROCESSORPARSERBUFFER_TOKEN_QUESTION = 67,
	PREPROCESSORPARSERBUFFER_TOKEN_RIGHT_ASSIGN = 23,
	PREPROCESSORPARSERBUFFER_TOKEN_RIGHT_OP = 33,
	PREPROCESSORPARSERBUFFER_TOKEN_SHARP = 69,
	PREPROCESSORPARSERBUFFER_TOKEN_SHARP_SHARP = 68,
	PREPROCESSORPARSERBUFFER_TOKEN_STRING_LITERAL = 21,
	PREPROCESSORPARSERBUFFER_TOKEN_SUB_ASSIGN = 26,
	PREPROCESSORPARSERBUFFER_TOKEN_TEXT = 71,
	PREPROCESSORPARSERBUFFER_TOKEN_UNDEF = 6,
	PREPROCESSORPARSERBUFFER_TOKEN_WARNING = 16,
	PREPROCESSORPARSERBUFFER_TOKEN_WHITESPCE = 70,
	PREPROCESSORPARSERBUFFER_TOKEN_XOR = 65,
	PREPROCESSORPARSERBUFFER_TOKEN_XOR_ASSIGN = 31
};

enum PreprocessorParserBuffer_nonTerminals {
	PREPROCESSORPARSERBUFFER_NONTERMINAL_CODE = 2,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_CODE_TOKEN = 3,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_CODE_TOKEN_WITHOUT_DIRECTEND = 4,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_CODE_WITHOUT_DIRECTEND = 1,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_CONDITIONAL = 13,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_CONTROL_LINE = 5,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_DEFINE_LINE = 6,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_ELIF_LINE = 18,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_ELIF_PARTS = 16,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_ELSE_LINE = 19,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_ELSE_PART = 17,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_ENDIF_LINE = 15,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_ERROR_LINE = 10,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_IDENTIFIER_LIST = 20,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_IF_LINE = 14,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_INCLUDE_LINE = 8,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_LINE_LINE = 9,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_PRAGMA_LINE = 12,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_PREPROCESSOR = 0,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_UNDEF_LINE = 7,
	PREPROCESSORPARSERBUFFER_NONTERMINAL_WARNING_LINE = 11
};

extern unsigned char preprocessor_parser_buffer_scanner[];
extern unsigned int preprocessor_parser_buffer_scanner_size;

extern unsigned char preprocessor_parser_buffer_parser[];
extern unsigned int preprocessor_parser_buffer_parser_size;

#endif
